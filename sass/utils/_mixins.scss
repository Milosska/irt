/* ====================== line height calculation =======================*/
@mixin font-size($size: 14px, $height: 22px) {
  font-size: $size;
  line-height: calc($height / $size);
}

/* ============================ flex patterns ===========================*/
@mixin flex-s($y: center) {
  display: flex;
  align-items: $y;
  flex-wrap: wrap;
}

@mixin flex-m($x: center, $y: center) {
  display: flex;
  justify-content: $x;
  align-items: $y;
  flex-wrap: wrap;
}

@mixin flex-l($gap, $x: center, $y: center) {
  display: flex;
  gap: $gap;
  justify-content: $x;
  align-items: $y;
  flex-wrap: wrap;
}

@mixin flex-basis($n, $gap) {
  flex-basis: calc((100% - ($gap * ($n - 1))) / $n);
}

/* ============================= position pattern =======================*/
@mixin position($position: absolute, $top-or-bottom: top, $y: 0, $left-or-right: left, $x: 0) {
  position: $position;
  #{$top-or-bottom}: $y;
  #{$left-or-right}: $x;
}

/* ============================= animation patterns =======================*/
@mixin animation-s($property) {
  transition: $property $animation;
}

@mixin animation-m($property-1, $property-2) {
  transition: $property-1 $animation, $property-2 $animation;
}

@mixin animation-l($property-1, $property-2, $property-3) {
  transition: $property-1 $animation, $property-2 $animation, $property-3 $animation;
}

/* =============================== svg pattern ============================*/
@mixin svg($width, $height) {
  width: $width;
  height: $height;
  fill: currentColor;
}

/* ============================ pseudoelement pattern ======================*/
@mixin pseudo($width, $height) {
  content: '';
  width: $width;
  height: $height;
}

/* ============================ social links icons ==========================*/
@mixin socials($width: 44px, $height: 44px) {
  width: $width;
  height: $height;
  border-radius: 50%;
  fill: map-get($txtcolor, 'main');
  @include animation-s(fill);

  &:hover,
  &:focus {
    fill: map-get($txtcolor, 'accent');
  }
}

/* ============================ media pattern ======================*/
@mixin media($max-or-min: min, $device) {
  @if $max-or-min == max {
    @media screen and (#{$max-or-min}-width: (map-get($breakpoints, '#{$device}') - 0.5px)) {
      @content;
    }
  } @else {
    @media screen and (#{$max-or-min}-width: map-get($breakpoints, '#{$device}')) {
      @content;
    }
  }
}

/* ============================ link animation pattern ======================*/

@mixin link-animation($width: 100%, $y) {
  &::before {
    position: absolute;
    top: 0;
    right: 0;

    transform: translateX(-110%) translateY(0);

    content: ' ';
    display: block;
    width: $width;
    height: 4px;
    background-color: map-get($txtcolor, 'accent');
  }

  @keyframes headerLinkAnimation {
    0% {
      transform: translateX(-110%) translateY(0);
    }
    50% {
      transform: translateX(0) translateY(0);
    }
    100% {
      transform: translateX(0) translateY($y);
    }
    // y=50px
  }

  &:hover:before,
  &:focus:before {
    animation-name: headerLinkAnimation;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
  }
}
